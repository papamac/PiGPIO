<?xml version="1.0"?>
<!--
###############################################################################
#                                                                             #
#                              MODULE Events.xml                              #
#                                                                             #
###############################################################################

 PACKAGE:  Raspberry Pi General Purpose Input/Output for Indigo
  MODULE:  Events.xml
   TITLE:  Pi GPIO event (trigger) objects (Events.xml)
FUNCTION:  Events.xml defines Pi GPIO events that may trigger specific indigo
           actions.  It identifies events, specifies GUI labels, and sets
           default values.
   USAGE:  Events.xml is read and interpreted by the indigo server during
           plugin startup.  When a user creates a new trigger, indigo uses the
           xml data to instantiate a trigger object per the indigo object model
           (IOM).
  AUTHOR:  papamac
 VERSION:  0.9.1
    DATE:  June 17, 2023

CHANGE LOG:

Major changes to the Pi GPIO plugin are described in the CHANGES.md file in the
top level PiGPIO folder.  Changes of lesser importance may be described in
individual module docstrings if appropriate.

v0.5.0  11/28/2021  Fully functional beta version with minimal documentation.
v0.5.3   3/28/2022  Change event field id's and add events for pigpio errors.
v0.7.0   2/14/2023  Change separate low and high limit fault events to a single
                    limit fault event.
v0.9.1   6/17/2023  Remove the stop triggerEvent from the pigpioError event
                    type.  Capitalize names for other trigger events.
-->

<Events>

    <!-- ################################################################## -->
    <!-- #                                                                # -->
    <!-- #                        Pi GPIO Error                           # -->
    <!-- #                                                                # -->
    <!-- ################################################################## -->

    <Event id="pigpioError">
        <Name>Pi GPIO Error</Name>
        <ConfigUI>

            <!-- pigpioError triggerEvent -->

            <Field id="triggerEvent" type="menu" defaultValue="anyError">
                <Label>Pi GPIO Error:</Label>
                <List>
                    <Option value="any">Any Pi GPIO Error</Option>
                    <Option value="CONNECTION ERROR">Connection Error</Option>
                    <Option value="START ERROR">Start Error</Option>
                    <Option value="READ ERROR">Read Error</Option>
                    <Option value="WRITE ERROR">Write Error</Option>
                    <Option value="INTERRUPT ERROR">Interrupt Error</Option>
                </List>
            </Field>
        </ConfigUI>
    </Event>

    <!-- ################################################################## -->
    <!-- #                                                                # -->
    <!-- #                         Limit Fault                            # -->
    <!-- #                                                                # -->
    <!-- ################################################################## -->

    <Event id="limitFault">
        <Name>Limit Fault</Name>
        <ConfigUI>

            <!-- limitFault triggerEvent -->

            <Field id="triggerEvent" type="menu" defaultValue="anyLimitFault">
                <Label>Limit Fault:</Label>
                <List>
                    <Option value="any">Any Limit Fault</Option>
                    <Option value="low limit fault">Low Limit Fault</Option>
                    <Option value="high limit fault">High Limit Fault</Option>
                </List>
            </Field>
        </ConfigUI>
    </Event>

</Events>